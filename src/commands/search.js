const config = require('../config');
const { searchYouTube } = require('../utils/youtube');

module.exports = {
    name: 'search',
    description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å YouTube',
    
    async execute(message, args) {
        const query = message.content.slice(8).trim();
        
        if (!query) {
            return message.reply('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: `!search naruto opening`');
        }

        const voiceChannel = message.member.voice.channel;
        if (!voiceChannel) {
            return message.reply('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô');
        }

        message.reply(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: **${query}**`);

        try {
            const searchResult = await searchYouTube(query, 5);

            if (searchResult.length === 0) {
                return message.reply('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå');
            }

            // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            let resultMessage = 'üîé **‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:**\n\n';
            searchResult.forEach((video, index) => {
                const duration = video.durationRaw || 'N/A';
                resultMessage += `**${index + 1}.** ${video.title}\n‚è±Ô∏è ${duration}\n\n`;
            });
            resultMessage += '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏£‡∏Å... ‡πÉ‡∏ä‡πâ `!search` ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏≠‡∏∑‡πà‡∏ô';

            await message.reply(resultMessage);

            // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏£‡∏Å
            const firstVideo = searchResult[0];
            const cleanUrl = firstVideo.url;
            const songTitle = firstVideo.title;

            config.state.lastTextChannel = message.channel;
            config.queue.push({ 
                cleanUrl, 
                voiceChannel, 
                message, 
                textChannel: message.channel, 
                title: songTitle,
                sourceType: 'youtube',
                streamData: null,
                durationMs: null,
                videoId: firstVideo.videoId || null
            });

            if (!config.state.isPlaying) {
                const { playNext } = require('../handlers/player');
                playNext(voiceChannel.guild.id);
            } else {
                message.reply(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß: **${songTitle}**`);
            }

        } catch (error) {
            console.error('Search error:', error);
            message.reply('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤');
        }
    }
};
