const { listPresets, setPreset, setCustomFilter, getFilterForGuild } = require('../utils/audioFilters');

module.exports = {
    name: 'filters',
    description: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó',

    async execute(message, args) {
        if (!message.guild) {
            return message.reply('‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
        }

        const guildId = message.guild.id;
        const subcommand = (args.shift() || 'list').toLowerCase();

        if (subcommand === 'list') {
            const { preset, filterString } = getFilterForGuild(guildId);
            const presetList = listPresets().filter((name) => name !== 'custom').join(', ');
            const lines = [
                `üéöÔ∏è ‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: **${preset}**`,
                preset === 'custom' && filterString ? `üß™ Custom: ${filterString}` : null,
                `üîÄ Presets ‡∏ó‡∏µ‡πà‡∏°‡∏µ: ${presetList}`,
                'üìù ‡πÉ‡∏ä‡πâ `!filters set <preset>` ‡∏´‡∏£‡∏∑‡∏≠ `!filters custom <ffmpeg filter>`'
            ].filter(Boolean);

            return message.reply(lines.join('\n'));
        }

        if (subcommand === 'set') {
            if (!args.length) {
                return message.reply('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ preset ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô `!filters set bassboost`');
            }

            const presetName = args[0].toLowerCase();

            try {
                setPreset(guildId, presetName);
                return message.reply(`‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô **${presetName}** ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏ô‡∏µ‡πâ`);
            } catch (error) {
                return message.reply('‚ùå preset ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏ä‡πâ `!filters list` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
            }
        }

        if (subcommand === 'custom') {
            if (!args.length) {
                return message.reply('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡πà‡∏≤ ffmpeg filter ‡πÄ‡∏ä‡πà‡∏ô `!filters custom bass=g=5`');
            }

            const customFilter = args.join(' ');
            setCustomFilter(guildId, customFilter);
            return message.reply('üß™ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ custom filter ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡∏°‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ filter ‡∏ô‡∏µ‡πâ');
        }

        if (subcommand === 'reset') {
            setPreset(guildId, 'flat');
            return message.reply('üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
        }

        return message.reply('‚ùì ‡πÉ‡∏ä‡πâ `!filters list`, `!filters set <preset>`, `!filters custom <filter>`, ‡∏´‡∏£‡∏∑‡∏≠ `!filters reset`');
    }
};
